import type { AxiosResponse, AxiosError } from "axios";
export declare type Protocol = "http" | "https";
/**
 * Build a URL from constituent components.
 */
export declare function buildUrl({ protocol, host, port, path, query, }: {
    protocol: Protocol;
    host: string;
    port?: number;
    path?: string;
    query?: Record<string, string | undefined>;
}): string;
export declare function pick<TObj extends Record<string, any>, TKey extends keyof TObj>(obj: TObj, ...props: TKey[]): Pick<TObj, TKey>;
/**
 * Axios error interceptor to retry on network failures.
 * Dormant by default - is activated by including `retries` in the axios config.
 */
export declare function axiosRetryOnNetworkError(error: AxiosError): Promise<AxiosResponse>;
export declare const isBrowser: () => boolean;
export declare const isNode: () => boolean;
export declare const isReactNative: () => boolean;
